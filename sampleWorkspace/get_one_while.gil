import "wisl_pointer_arith.gil", "wisl_core.gil";


spec get_one()
  [[  emp  ]]
  [[  (ret == 1i)  ]]
  normal
proc get_one() {
    x := 1i;
    y := 2i;
    gvar0 := "get_one_loop0"();
    ret := x;
    return
};


spec get_one_loop0()
  <invariant_spec>
  [[  emp  ]]
  [[  emp * (ret == {{  }}) * (#lgvar0 == true) * i__pred_leq(x, y, #lgvar0)  ]]
  normal
proc get_one_loop0() {
          gvar0 := "i__lt"(x, y);
          goto [gvar0] then0 else0;
  then0:  gvar1 := "i__add"(x, 1i);
          x := gvar1;
          loopretvar__ := "get_one_loop0"() use_subst [invariant_spec];
          goto endif0;
  else0:  loopretvar__ := {{  }};
  endif0: skip;
          ret := loopretvar__;
          return
};
